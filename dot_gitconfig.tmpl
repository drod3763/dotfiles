# This is Git's per-user configuration file.
[user]
	name = Derick Rodriguez
	email = 7785716+drod3763@users.noreply.github.com
[alias]
	# Sourced via https://news.ycombinator.com/item?id=24175811
	hs = "log --date=format-local:'%Y-%m-%d %H:%M:%S' --pretty=format:'%cd %<(20,trunc)%an %C(auto)%h%Creset%C(auto)%d%Creset %s'"
	hst = "!git lg --all --graph --reflog"
	# Sourced via https://coderwall.com/p/euwpig/a-better-git-log
	lg = log --color --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset' --abbrev-commit
	# Aliases below sourced via https://www.durdn.com/blog/2012/11/22/must-have-git-aliases-advanced-examples/
	# List commits in short form, with colors and branch/tag annotations. 
	ls = log --pretty=format:"%C(yellow)%h%Cred%d\\ %Creset%s%Cblue\\ [%cn]" --decorate
	# List commits showing changed files
	ll = log --pretty=format:"%C(yellow)%h%Cred%d\\ %Creset%s%Cblue\\ [%cn]" --decorate --numstat
	# List commits showing changed files with no colors for piping
	lnc = log --pretty=format:"%h\\ %s\\ [%cn]"
	# List oneline commits showing dates
	lds = log --pretty=format:"%C(yellow)%h\\ %ad%Cred%d\\ %Creset%s%Cblue\\ [%cn]" --decorate --date=short
	# List oneline commits showing relative dates
	ld = log --pretty=format:"%C(yellow)%h\\ %ad%Cred%d\\ %Creset%s%Cblue\\ [%cn]" --decorate --date=relative
	# Default look for short git log
	le = log --oneline --decorate
	# See all the commits related to a file, with the diff of the changes
	fl = log -u
	# Show modified files in last commit
	dl = "!git ll -1"
	# Show a diff last commit
	dlc = diff --cached HEAD^
	# Next three show content (full diff) of a commit given a revision
	dr  = "!f() { git diff "$1"^.."$1"; }; f"
	lc  = "!f() { git ll "$1"^.."$1"; }; f"
	diffr  = "!f() { git diff "$1"^.."$1"; }; f"
	# Find a file path in codebase
	f = "!git ls-files | grep -i"
	# Search/grep your entire codebase for a string
	gr = grep -Ii
	# Grep from root folder
	gra = "!f() { A=$(pwd) && TOPLEVEL=$(git rev-parse --show-toplevel) && cd $TOPLEVEL && git grep --full-name -In $1 | xargs -I{} echo $TOPLEVEL/{} && cd $A; }; f"
	# List all your Aliases
	la = "!git config -l | grep alias | cut -c 7-"
	# Prepend done to a branch name
	done = "!f() { git branch | grep "$1" | cut -c 3- | grep -v done | xargs -I{} git branch -m {} done-{}; }; f"
	#clean = !git branch --merged master | grep -v -e 'master' -e '\*' | xargs -n 1 git branch -d && git remote prune origin
	cob = checkout -b
	#delete remote branch
	delr = push origin --delete
	#delete local branch
	dell = branch -d
[core]
{{- if and (eq .chezmoi.os "darwin") (stat "/Applications/Komet.app") }}
	editor = /Applications/Komet.app/Contents/MacOS/Komet
{{- else if lookPath "code"}}
	# Sets the default editor to VS Code detailed here: https://dev.to/deadlybyte/make-vs-code-your-default-git-editor-j6d
	editor = code --new-window --wait --disable-extensions
{{- end }}
	excludesfile = ~/.gitignore
{{- if lookPath "delta" }}
	pager = delta
{{- end }}
{{- if lookPath "bcompare" }}
[diff]
	# From https://www.scootersoftware.com/support.php?zz=kb_vcs#gitlinux
	tool = bc4
[difftool]
    prompt = false
[difftool "bc4"]
	trustExitCode = true
[merge]
	tool = bc4
[mergetool]
    prompt = false
    keepBackup = false
[mergetool "bc4"]
	trustExitCode = true
{{- else if lookPath "delta" }}
[interactive]
	diffFilter = delta --color-only
{{- end }}
{{- if lookPath "delta" }}
[delta]
    features = side-by-side line-numbers decorations
    syntax-theme = Dracula
    plus-style = syntax "#003800"
    minus-style = syntax "#3f0001"
[delta "decorations"]
    commit-decoration-style = bold yellow box ul
    file-style = bold yellow ul
    file-decoration-style = none
    hunk-header-decoration-style = cyan box ul
[delta "line-numbers"]
    line-numbers-left-style = cyan
    line-numbers-right-style = cyan
    line-numbers-minus-style = 124
    line-numbers-plus-style = 28
{{- end }}
{{ if lookPath "ksdiff" -}}
[difftool "Kaleidoscope"]
	cmd = ksdiff --partial-changeset --relative-path \"$MERGED\" -- \"$LOCAL\" \"$REMOTE\"
[mergetool "Kaleidoscope"]
	cmd = ksdiff --merge --output \"$MERGED\" --base \"$BASE\" -- \"$LOCAL\" --snapshot \"$REMOTE\" --snapshot
	trustExitCode = true
{{- end }}
[push]
	default = current
[help]
	# Autocorrect commands. Set to 10 tenths of a second or 1 second
	autocorrect = 10
[rerere]
	# Remembers git merge conflict resolution for automation - see https://levelup.gitconnected.com/the-git-rerere-command-automate-solutions-to-fix-merge-conflicts-d501a9ab9007
	enabled = true
[pull]
	rebase = true